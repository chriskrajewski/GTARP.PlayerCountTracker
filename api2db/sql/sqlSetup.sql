create table public.player_counts (
  id bigint generated by default as identity not null,
  timestamp timestamp with time zone not null,
  player_count integer not null,
  server_id text not null,
  created_at timestamp with time zone null default now(),
  constraint player_counts_pkey primary key (id)
) TABLESPACE pg_default;

create index IF not exists player_counts_server_id_idx on public.player_counts using btree (server_id) TABLESPACE pg_default;

create table public.server_xref (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  server_id text null,
  server_name text null,
  "order" integer null,
  constraint server_xref_pkey primary key (id)
) TABLESPACE pg_default;

create table public.twitch_streams (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  streamer_name text not null,
  stream_title text not null,
  viewer_count integer not null,
  game_name text not null,
  "serverId" text not null,
  constraint twitch_streams_pkey primary key (id)
) TABLESPACE pg_default;

create view public.streamer_count as
select
  count(twitch_streams.streamer_name) as streamercount,
  date_trunc('minute'::text, twitch_streams.created_at) as "timestamp",
  twitch_streams."serverId" as server_id
from
  twitch_streams
group by
  (
    date_trunc('minute'::text, twitch_streams.created_at)
  ),
  twitch_streams."serverId";

  create view public.viewer_count as
select
  sum(twitch_streams.viewer_count) as viewcount,
  date_trunc('minute'::text, twitch_streams.created_at) as "timestamp",
  twitch_streams."serverId" as server_id
from
  twitch_streams
group by
  (
    date_trunc('minute'::text, twitch_streams.created_at)
  ),
  twitch_streams."serverId";